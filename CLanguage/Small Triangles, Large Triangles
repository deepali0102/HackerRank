
double heron(const triangle *tr)
{
    double p = (tr->a + tr->b + tr->c) / 2.;
    return sqrt(p * (p - tr->a) * (p - tr->b) * (p - tr->c));
}

int cmp(const triangle* tr1, const triangle* tr2)
{
    double s1 = heron(tr1);
    double s2 = heron(tr2);
    if (s1 < s2) return -1;
    else if (s1 > s2) return 1;
    else return 0;
    /*
    if (tr1->a < tr2->a) return -1;
    else if (tr1->a > tr2->a) return 1;
    if (tr1->b < tr2->b) return -1;
    else if (tr1->b > tr2->b) return 1;
    return tr1->c - tr2->c;
    */
}

void sort_by_area(triangle* tr, int n) {
	/**
	* Sort an array a of the length n
	*/
      qsort(tr, n, sizeof(triangle), (int(*)(const void*, const void*)) cmp);
}

